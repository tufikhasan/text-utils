{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Navbar","props","mood","href","title","type","role","onClick","toggleMood","id","htmlFor","Textform","useState","text","setText","headingOne","style","backgroundColor","rows","onChange","event","target","value","split","filter","words","length","disabled","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","join","headingTwo","Alert","height","alert","word","lower","charAt","slice","capitalize","message","About","myStyle","color","heading","defaultProps","App","setMood","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb8c1bbf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"bg-dark text-light\">\r\n            <div className=\"container\">\r\n            <div className=\"row text-center\">\r\n                copyright\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        //javaScript Template literals\r\n        <nav className={`navbar shadow navbar-expand-lg navbar-${props.mood} bg-${props.mood}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <div className={`form-check form-switch text-${props.mood==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMood} id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Darkmood</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Set Title\",\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleUppercase = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert to Uppercase\", \"success\");\r\n    }\r\n    const handleLowercase = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert to Lowercase\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text copied successful\", \"success\");\r\n    };\r\n    const removeExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Remove text Extra Spaces\", \"success\");\r\n    };\r\n    const handleClearText = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Clear all text\", \"success\");\r\n    };\r\n    return (\r\n        <div className=\"row\">\r\n          <div className={`col-md-8 my-3 text-${props.mood==='light'?'dark':'light'}`}>\r\n            <h3>{props.headingOne}</h3>\r\n            <textarea style={{backgroundColor : props.mood==='dark'?'#5f6064':'white'}} className={`form-control shadow text-${props.mood==='light'?'dark':'light'}`} id=\"textbox\" rows=\"10\" onChange={handleOnChange} value={text}></textarea>\r\n            <p className=\"mb-3\">{text.split(/\\s+/).filter((words)=>{return words.length !==0}).length} words, {text.length} characters and read time <strong>{0.008 * text.split(' ').filter((words)=>{return words.length !==0}).length} </strong>minutes</p>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn-sm btn-primary m-1\" onClick={handleUppercase}>Text Uppercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn-sm btn-primary m-1\" onClick={handleLowercase}>Text Lowercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn-sm btn-primary m-1\" onClick={handleCopy}>Copy to clipboard</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn-sm btn-primary m-1\" onClick={removeExtraSpaces}>Remove extra Spaces</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn-sm btn-primary m-1\" onClick={handleClearText}>Clear Text</button>\r\n          </div>\r\n          <div className={`col-md-4 my-3 text-${props.mood==='light'?'dark':'light'}`}>\r\n            <h2>{props.headingTwo}</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nTextform.propTypes = {\r\n    headingOne: PropTypes.string.isRequired,\r\n    headingTwo: PropTypes.string.isRequired,\r\n}\r\nTextform.defaultProps = {\r\n    headingOne: 'Set the Text box heading',\r\n    headingTwo: 'Set the Preview heading',\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n        </div>}\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    let myStyle ={\r\n        color: props.mood === \"dark\"?\"white\":\"black\",\r\n        backgroundColor: props.mood === \"dark\"?\"gray\":\"white\",\r\n    }\r\n    return (\r\n        <div className=\"container about-sec\" style={myStyle}>\r\n            <h3 className=\"mb-3\">{props.heading}</h3>\r\n            <div className=\"accordion shadow\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    <strong>Analyze your text</strong>\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>This is the first item's accordion body.It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free to use</strong>\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>This is the second item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        <strong>Browser compatible</strong>\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>This is the third item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\n\n\nfunction App() {\n  const [mood, setMood] = useState('light');\n  const toggleMood = ()=>{\n    if(mood==='light'){\n      setMood('dark');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mood enable\", \"success\")\n    }else{\n      setMood('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mood enable\", \"success\")\n    }\n  };\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  return (\n    <div className=\"App\">\n      <Navbar title=\"TextUtils\" mood={mood} toggleMood={toggleMood} />\n      <Alert alert={alert}/>\n      <div className=\"container\">\n        <Textform headingOne=\"Enter the text below\" headingTwo=\"Preview\" mood={mood} showAlert={showAlert} />\n      </div>\n      <About heading=\"About TextUtils\" mood={mood} />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}